using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using H5.PRNG;

namespace H5.Testing.UnitTests;
internal class SFC32 : IUnitTest {

    public string GetName() { return this.GetType().FullName; }
    const int IterCount = ushort.MaxValue;
    private void TestInt() {
        PRNG.SFC32 rand = new();
        uint r0 = rand.NextInt();
        uint r1 = r0;
        for (int i = 0; i < IterCount; i++) {
            r1 = rand.NextInt();
            TestHelpers.ExpectNotEqual(r0, r1);
            r0 = r1;
        }
    }
    private void TestFloat() {
        PRNG.SFC32 rand = new();
        float r0 = rand.NextInt();
        float r1 = r0;
        for (int i = 0; i < IterCount; i++) {
            r1 = rand.NextFloat();
            TestHelpers.ExpectNotEqual(r0, r1);
            r0 = r1;
        }
    }
    private void TestJavaScriptCompat() {
        // Data Generated by the JavaScript version of SFC
        State128 seed = new State128(9u, 8u, 7u, 6u);
        uint[] integers = new uint[] { 23u, 78u, 132120854u, 566554518u, 948917420u, 190600439u, 4291668133u, 2081386882u };

        PRNG.SFC32 rand = new(seed);
        for (int i = 0; i < integers.Length; i++) {
            uint v = rand.NextInt();
            TestHelpers.ExpectEqual(integers[i], v);
        }
    }

    public void Run() {
        this.TestInt();
        this.TestFloat();
        this.TestJavaScriptCompat();
    }
}
