using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using H5.PRNG;

namespace H5.Testing.UnitTests;
internal class SFC32Test : IUnitTest {

    public string GetName() { return this.GetType().FullName; }
    const int IterCount = ushort.MaxValue;
    private void TestInt() {
        SFC32 rand = new();
        uint r0 = rand.NextInt();
        uint r1 = r0;
        for (int i = 0; i < IterCount; i++) {
            r1 = rand.NextInt();
            TestHelpers.ExpectNotEqual(r0, r1);
            r0 = r1;
        }
    }
    private void TestFloat() {
        SFC32 rand = new();
        float r0 = rand.NextInt();
        float r1 = r0;
        for (int i = 0; i < IterCount; i++) {
            r1 = rand.NextFloat();
            TestHelpers.ExpectNotEqual(r0, r1);
            r0 = r1;
        }
    }
    private void TestJavaScriptCompat() {
        // Data Generated by the JavaScript version of SFC
        State128 seed = new State128(4032620186u, 319449822u, 1202188395u, 4065453747u);
        uint[] integers = new uint[] {
            322295942u,
            3972768176u,
            681660461u,
            2424607614u,
            656583202u,
            3723442569u,
            697147048u,
            1663904451u,
            1348659824u,
            3149144158u,
            2705493418u,
            2861898084u,
            2232005451u,
            4220562352u,
            2607782294u,
            1507656206u
        };

        SFC32 rand = new(seed);
        for (int i = 0; i < integers.Length; i++) {
            uint v = rand.NextInt();
            TestHelpers.ExpectEqual(integers[i], v);
        }
    }

    public void Run() {
        this.TestInt();
        this.TestFloat();
        this.TestJavaScriptCompat();




    }
}
