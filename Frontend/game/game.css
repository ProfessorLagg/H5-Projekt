* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    overflow: none;
    touch-action: none !important;
}

:host {
    --baseunit: 1em;
}

/* Preload Images */
:host::before {
    position: absolute;
    width: 0;
    height: 0;
    overflow: hidden;
    z-index: -999;
    content: url("./block.svg") url("./block.svg");
}

:host {
    display: grid;
    grid-auto-flow: row dense;
    grid-template-columns: 100%;
    grid-template-rows: auto 9fr 5fr;
    gap: var(--baseunit);
    /*non-grid setings*/
    aspect-ratio: 1/2;
    max-height: 100vh;
    max-width: 100vw;
    height: var(--host-height);
    width: var(--host-width);
    position: relative;
    padding-top: var(--baseunit) !important;
    padding-bottom: var(--baseunit) !important;
    /* debug settings */
    /* background-color: magenta; */
    /* outline: 1px solid red; */
}

@media (min-aspect-ratio: 1/2) {
    :host {
        top: 0;
        left: calc(50% - 25vh);
        --host-height: 100vh;
        --host-width: 50vh;
    }
}

@media (aspect-ratio: 1/2) {
    :host {
        --host-width: 100vw;
        --host-height: 200vw;
        top: calc(100% - 200vw);
        left: 0;
    }
}

@media (max-aspect-ratio: 1/2) {
    :host {
        --host-width: 100vw;
        --host-height: 200vw;
        top: calc(100% - 200vw);
        left: 0;
    }
}

#gamplay-wrap {
    display: grid;
    grid-auto-flow: row dense;
    grid-template-columns: 100%;
    grid-template-rows: auto 9fr 5fr;
    gap: var(--baseunit);
    /*non-grid setings*/
    height: var(--host-height);
    width: var(--host-width);
}

#game-board {
    aspect-ratio: 1/1;
    width: 100%;
    background-image: url("./board.svg");
    /**/
    display: grid;
    grid-auto-flow: row dense;
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
    gap: 0px 0px;
    grid-template-areas:
        ". . . . . . . . ."
        ". . . . . . . . ."
        ". . . . . . . . ."
        ". . . . . . . . ."
        ". . . . . . . . ."
        ". . . . . . . . ."
        ". . . . . . . . ."
        ". . . . . . . . ."
        ". . . . . . . . .";
    /**/
    background-color: rgba(0, 0, 0, 0%);
    background-blend-mode: multiply;
    /**/
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.board-cell {
    background-color: rgba(0, 0, 0, 0%);
    margin: 0;
}

.board-cell.highlight {
    background-color: rgba(255, 255, 0, 50%);
}

.board-cell[state="1"] {
    background-image: url("./block.svg");
    background-size: contain;
}

#game-score {
    font-size: 3vh;
    text-align: center;
    font-weight: bold;
}

#piece-buffer {
    width: var(--host-width);
    height: min-content;
    /**/
    display: grid;
    grid-auto-flow: row dense;
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr;
    grid-template-areas: "p1 p2 p3";
    gap: 0em 0.5vw;
    /**/
    padding-left: 1px;
    padding-right: 1px;
    /**/
    /* outline: 1px solid magenta; */
}

.game-piece {
    aspect-ratio: 1/1;
    background-size: contain;
    outline: 1px solid white;
}

.game-piece[shapeId="-1"] {
    outline: none;
    display: none;
}

#piece-1 {
    grid-area: p1;
}

#piece-2 {
    grid-area: p2;
}

#piece-3 {
    grid-area: p3;
}

.game-piece.dragging {
    width: calc((100% / 9) * 5);
    outline: 1px solid rgba(255, 0, 255, 0.1%);
}

.dragging {
    position: absolute !important;
    left: 0px;
    right: 0px;
}

/* UI */
#ui-overlay {
    /**/
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    /**/
    position: absolute;
    z-index: 2;
    height: 100%;
    width: 100%;
    height: var(--host-height) !important;
    width: var(--host-width) !important;
    /**/
    background-color: rgba(0, 0, 0, 80%);
    /**/
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

#ui-overlay.hidden {
    display: none;
    width: 0px;
    height: 0px;
    left: calc(-1 * var(--host-width));
    top: calc(-1 * var(--host-height));
}

.ui-button {
    width: fit-content;
    align-self: center;
    font-size: calc((var(--host-height) / 100) * 4);

    padding-left: 1vw;
    padding-right: 1vw;
    font-weight: bold;
    font-family: 'Roboto';
}